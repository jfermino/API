/*
 * API de Livro
 *
 * Exemplo de uma API de Livro
 *
 * OpenAPI spec version: 1.0.0
 * Contact: juliofermino2009@gmail.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{ 
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class Livros : IEquatable<Livros>
    { 
        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id")]
        public long? Id { get; set; }

        /// <summary>
        /// Gets or Sets Nome
        /// </summary>
        [Required]
        [DataMember(Name="nome")]
        public string Nome { get; set; }

        /// <summary>
        /// ...
        /// </summary>
        /// <value>...</value>
        [DataMember(Name="dataLancamento")]
        public DateTime? DataLancamento { get; set; }

        /// <summary>
        /// Gets or Sets Categoria
        /// </summary>
        [DataMember(Name="categoria")]
        public Categoria Categoria { get; set; }

        /// <summary>
        /// Gets or Sets Autores
        /// </summary>
        [DataMember(Name="autores")]
        public Autores Autores { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class Livros {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  Nome: ").Append(Nome).Append("\n");
            sb.Append("  DataLancamento: ").Append(DataLancamento).Append("\n");
            sb.Append("  Categoria: ").Append(Categoria).Append("\n");
            sb.Append("  Autores: ").Append(Autores).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((Livros)obj);
        }

        /// <summary>
        /// Returns true if Livros instances are equal
        /// </summary>
        /// <param name="other">Instance of Livros to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(Livros other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    Id == other.Id ||
                    Id != null &&
                    Id.Equals(other.Id)
                ) && 
                (
                    Nome == other.Nome ||
                    Nome != null &&
                    Nome.Equals(other.Nome)
                ) && 
                (
                    DataLancamento == other.DataLancamento ||
                    DataLancamento != null &&
                    DataLancamento.Equals(other.DataLancamento)
                ) && 
                (
                    Categoria == other.Categoria ||
                    Categoria != null &&
                    Categoria.Equals(other.Categoria)
                ) && 
                (
                    Autores == other.Autores ||
                    Autores != null &&
                    Autores.Equals(other.Autores)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                    if (Id != null)
                    hashCode = hashCode * 59 + Id.GetHashCode();
                    if (Nome != null)
                    hashCode = hashCode * 59 + Nome.GetHashCode();
                    if (DataLancamento != null)
                    hashCode = hashCode * 59 + DataLancamento.GetHashCode();
                    if (Categoria != null)
                    hashCode = hashCode * 59 + Categoria.GetHashCode();
                    if (Autores != null)
                    hashCode = hashCode * 59 + Autores.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
        #pragma warning disable 1591

        public static bool operator ==(Livros left, Livros right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(Livros left, Livros right)
        {
            return !Equals(left, right);
        }

        #pragma warning restore 1591
        #endregion Operators
    }
}
